<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="genrePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        d1dkx3PXwQAAAABJRU5ErkJggg==
</value>
  </data>
</root>