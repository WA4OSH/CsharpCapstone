<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="changeGenrePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>