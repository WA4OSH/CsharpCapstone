<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="deleteAlbumPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA3AD8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDh/wDgoH/wWd+OXwe/bq+IHh7R9S0Obw94Y1kW9pY3dnLtkiEM
        TlJHimjlILM2Srq3PBWv1Av/ABCltqE0a6euyORkBOsapnAOB/y9V+Cf/BVH/lIp8Y/+w+3/AKTQ1++G
        g+E5vGvjOazhbYqyvJPLtz5EYbk+5OQAO5I7ZIqnJJNy6GWMlyRTRJ4de88WXzW+n6P9oZcb2GsaoI4c
        93Y3eB346nBwCeK9A0T4SReUrak4Zj95LTUtTUL9He7yf++BXTaDoVr4f0uO0s4/Jt4/urnJJ7sTxlj3
        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
</value>
  </data>
</root>