<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA3AD8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9+h0ry39of9tf4U/soRxj4geONE8N3E8fnRWkrtPeSpz8628Q
        aVlyCMhcZ460z9tf9oofsofsseNviB5cM9x4d01pLOKY/u5bp2WK3Vuh2maSMHByQT3xX89F58Cvjp+1
        VfXPxAXwH8TvHX/CTTy3L65a+H72+hvnEjI+2VI2QhXVkwpwuwrgYwPj+JuJqmXOOHwtPnqSV7atJbXa
        Wru/Q/ozwN8D8JxnSrZtnmM+q4KlJU7pxjKdRrmcYyn7seWNm21Ju6SW7X9An7Pn/BQ/4K/tTa0um+Bf
        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
        l8syrg7XG5slFAH3uq7R/OnUUUAFFFFAH//Z
</value>
  </data>
</root>