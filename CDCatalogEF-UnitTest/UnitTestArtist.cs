using System;
using System.Text;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;
using System.Data;

namespace CDCatalogEF
{
    /// <summary>
    /// UnitTestArtist creates a unique artist and adds it to the database.
    /// Then, it fetches and deletes it.
    /// </summary>
    [TestClass]
    public class UnitTestArtist
    {
        public UnitTestArtist()
        {

        }

        [TestMethod]
        public void TestArtistAdd()
        {
            using (var ctx = new CDCatalogEntities())
            {
                //create a test artist
                Artist a = new Artist();
                a.ArtistID = 0;  // autogenerated on add
                a.ArtistName = "Testing Artist 7yJLirjI";
                //add it to the context
                ctx.Artists.Add(a);
                //verify that .. records were changed
                int count = ctx.SaveChanges();
                Assert.IsTrue(count > 0 && a.ArtistID > 0, "No Records Changed");
            }
        }

        [TestMethod]
        public void TestArtistFetch()
        {
            using (var ctx = new CDCatalogEntities())
            {
                //Find the test artist in the database
                Artist a = ctx.Artists
                    .Where(n => n.ArtistName.ToLower().Equals("testing artist 7yjlirji"))
                    .FirstOrDefault();
                Assert.IsTrue(a != null, "No Record Found");
            }
        }

        [TestMethod]
        public void TestArtistDelete()
        {
            using (var ctx = new CDCatalogEntities())
            {
                //find the list of "Testing Artists"
                //in case duplicates were added in the previous tests
                var list = ctx.Artists
                .Where(n => n.ArtistName.ToLower().Equals("testing artist 7yjlirji"));

                ctx.Artists.RemoveRange(list);
                int count = ctx.SaveChanges();
                Assert.IsTrue(count > 0, "No Record Deleted");
            }
        }
    }
}

