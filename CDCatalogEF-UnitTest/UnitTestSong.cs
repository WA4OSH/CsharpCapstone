using System.Linq;
using System.Threading;
using CDCatalogEF;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace CDCatalogEF_UnitTest
{
    /// <summary>
    /// UnitTestSong creates a unique song with a exisiting genre and artist
    /// and adds it to an existing album in the database.  Then, it fetches
    /// and deletes it.
    /// </summary>
    [TestClass]
    public class UnitTestSong
    {
        public UnitTestSong()
        {

        }

        [TestMethod]
        public void TestSongAdd()
        {
            //Test init (none)

            //Add a song to the database
            using (var ctx = new CDCatalogEntities())
            {
                //Get an artist we know exists -- Avicii
                Artist A = ctx.Artists.Where(n => n.ArtistName.ToLower().Equals("avicii")).FirstOrDefault();
                //Get an album we know exists -- 
                Album M = ctx.Albums.Where(n => n.AlbumTitle.ToLower().Equals("true")).FirstOrDefault();
                //Get a genre we know exists -- Dance
                Genre G = ctx.Genres.Where(n => n.GenreName.ToLower().Equals("dance")).FirstOrDefault();
                //Creat a new song and add it to the context
                Song s = new Song();
                s.SongID = 0;  // autogenerated on add
                s.SongTitle = "Test Song GMwRYZ";
                s.ArtistID = A.ArtistID;
                s.AlbumID = M.AlbumID;
                s.GenreID = G.GenreID;
                s.SongTrackNumber = 15;
                s.SongTrackLength = 350;
                s.SongRating = 3;
                //add it to the database
                ctx.Songs.Add(s);
                //verify that only one record was changed
                int count = ctx.SaveChanges();
                Assert.IsTrue(count > 0 && s.SongID > 0, "No Records Added");

                //Test clean-up
                if (count > 0)
                {
                    //find all the test songs 
                    var list = ctx.Songs
                        .Where(n => n.SongTitle.ToLower().Equals("test song gmwryz"));

                    //Remove the songs from the context and database
                    ctx.Songs.RemoveRange(list);
                    ctx.SaveChanges();
                }
            }
        }

        [TestMethod]
        public void TestSongFetch()
        {
            using (var ctx = new CDCatalogEntities())
            {
                //Test init
                //Get an artist we know exists -- Avicii
                Artist A = ctx.Artists.Where(n => n.ArtistName.ToLower().Equals("avicii")).FirstOrDefault();
                //Get an album we know exists -- 
                Album M = ctx.Albums.Where(n => n.AlbumTitle.ToLower().Equals("true")).FirstOrDefault();
                //Get a genre we know exists -- Dance
                Genre G = ctx.Genres.Where(n => n.GenreName.ToLower().Equals("dance")).FirstOrDefault();
                //Build a context
                Song i = new Song();
                i.SongID = 0;  // autogenerated on add
                i.SongTitle = "Test Song GMwRYZ";
                i.ArtistID = A.ArtistID;
                i.AlbumID = M.AlbumID;
                i.GenreID = G.GenreID;
                i.SongTrackNumber = 15;
                i.SongTrackLength = 300;
                i.SongRating = 3;
                //add it to the database
                ctx.Songs.Add(i);

                //find a the test song in the database
                Song s = ctx.Songs.Where(n => n.SongTitle.ToLower().Equals("test song gmwryz")).FirstOrDefault();
                Assert.IsTrue(s != null, "No Record Deleted");

                //Test clean-up
                if (s != null)
                {
                    //find all the test songs in the context
                    var list = ctx.Songs
                        .Where(n => n.SongTitle.ToLower().Equals("test song gmwryz"));

                    //delete them from the context and database
                    ctx.Songs.RemoveRange(list);
                    ctx.SaveChanges();
                }

            }
        }

        [TestMethod]
        public void TestSongDelete()
        {
       
            using (var ctx = new CDCatalogEntities())
            {
                //Test init
                //Get an artist we know exists -- Avicii
                Artist A = ctx.Artists.Where(n => n.ArtistName.ToLower().Equals("avicii")).FirstOrDefault();
                //Get an album we know exists -- 
                Album M = ctx.Albums.Where(n => n.AlbumTitle.ToLower().Equals("true")).FirstOrDefault();
                //Get a genre we know exists -- Dance
                Genre G = ctx.Genres.Where(n => n.GenreName.ToLower().Equals("dance")).FirstOrDefault();
                Song s = new Song();
                s.SongID = 0;  // autogenerated on add
                s.SongTitle = "Test Song GMwRYZ";
                s.ArtistID = A.ArtistID;
                s.AlbumID = M.AlbumID;
                s.GenreID = G.GenreID;
                s.SongTrackNumber = 15;
                s.SongTrackLength =350;
                s.SongRating = 3;
                //add it to the database
                ctx.Songs.Add(s);
                
                //find the list of "Test Song GMwRYZ"
                //in case duplicates were added in the previous tests
                var list = ctx.Songs
                    .Where(n => n.SongTitle.ToLower().Equals("test song gmwryz"));

                ctx.Songs.RemoveRange(list);
                int count = ctx.SaveChanges();
                Assert.IsTrue(count > 0, "No Record Deleted");

                //Test clean-up (none)
            }
        }
    }
}

